{"version":3,"sources":["reportWebVitals.js","pages/Home.js","pages/About.js","pages/Movie.js","pages/NotFound.js","Menu.js","Button.js","Sidebar.js","App.js","Browser.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","useState","movies","setMovies","useEffect","fetch","res","json","result","data","className","map","movie","id","src","medium_cover_image","alt","title","About","Movie","params","useParams","useSearchParams","searchParams","setSearchParams","applyActiveColor","isActive","color","QueryNavLink","to","children","props","location","useLocation","console","log","search","moviesFiltered","filter","get","toLowerCase","includes","movieId","placeholder","value","onChange","e","target","genres","join","summary","style","NotFound","Menu","menus","menu","url","name","Button","size","width","handleClick","disabled","onClick","defaultProps","Sidebar","open","App","setOpen","exact","path","element","Browser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d037794f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './Home.css'\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Home() {\r\n    const [movies, setMovies] = useState([]);\r\n    // 첫 로딩에 모든 영화 정보 가저오기\r\n    useEffect(() => {\r\n        fetch('https://yts.mx/api/v2/list_movies.json?sort_by=download_count')\r\n        .then(res => res.json())\r\n        .then( result => {\r\n            const {data: {movies}} = result\r\n            setMovies(movies)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home-cards\">\r\n            {movies.map( (movie, id) => {\r\n                return(\r\n                    <div className=\"home-card\">\r\n                        <img src={movie.medium_cover_image} alt=\"\"/>\r\n                        <p>{movie.title}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","import './Home.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <h1>ABOUT PAGE</h1>\r\n    )\r\n}\r\n\r\nexport default About","import './Movie.css'\r\n\r\nimport { NavLink, useLocation, useParams, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\n// import movies from \"../postData\";\r\n\r\nfunction Movie() {\r\n    const params = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n    // 클릭된 영화의 정보를 출력하기위해 인덱스로 지정\r\n    let [searchParams, setSearchParams] = useSearchParams()\r\n    // Link에 스타일 주기 위해서 NavLink로 변경해서 스타일을 추가\r\n    const applyActiveColor = ({isActive}) => (isActive? {color:'orangered'} : {color:''})\r\n\r\n    // 첫 로딩에 모든 영화 정보 가저오기\r\n    useEffect(() => {\r\n        fetch('https://yts.mx/api/v2/list_movies.json?sort_by=download_count')\r\n        .then(res => res.json())\r\n        .then( result => {\r\n            const {data: {movies}} = result\r\n            setMovies(movies)\r\n        });\r\n    }, []);\r\n\r\n    // URL 쿼리스트링 값을 사용자가 입력한 키워드로 설정함(변경함)\r\n    const changeQueryString = (e) => {\r\n        const filter = e.target.value\r\n        if (filter) {\r\n            setSearchParams({filter})\r\n        } else {\r\n            setSearchParams({})\r\n        }\r\n    }\r\n\r\n    // 스프래드 연산자로 인해서 props = {key, style, className}\r\n    const QueryNavLink = ({ to, children, ...props}) => {\r\n        const location = useLocation();\r\n        console.log(location)\r\n        return <NavLink to={to + location.search} {...props}>{children}</NavLink>\r\n    }\r\n\r\n    // 필터링된 목록으로 렌더링하기\r\n    const moviesFiltered = movies.filter(movie => {\r\n        const filter = searchParams.get('filter')\r\n        if (!filter) return true;\r\n        const title = movie.title.toLowerCase()\r\n        return title.includes(filter.toLowerCase())\r\n    })\r\n    const movie = moviesFiltered[params.movieId];\r\n\r\n\r\n    return (\r\n        <div className='movies'>\r\n            {/* 검색창 */}\r\n            <div className='movie-search1'>\r\n                <input className=\"filter-movie\" placeholder=\"Search movie...\" value={searchParams.get('filter') || \"\"} \r\n                onChange={changeQueryString}/>\r\n            </div>\r\n            \r\n            {/* 특정 블로그 포스트 보여주기 */}\r\n            {movie ?\r\n                <div className=\"movie-container\">\r\n                    <h1>{movie.title}</h1>\r\n                    <img src={movie.medium_cover_image} alt=\"\"/>\r\n                    <p><b>{movie.genres.join(' / ')}</b></p>\r\n                    <span>{movie.summary}</span>\r\n                </div> :\r\n                <h1>MOVIE PAGE</h1>}\r\n\r\n            \r\n                \r\n            {/* 블로그 전체목록 보여주기 */}\r\n            {moviesFiltered.map( (movie, id) => {\r\n                return (\r\n                    <QueryNavLink key={id} to={`/movies/${id}`} className=\"movie-item\" style={applyActiveColor}>{movie.title}</QueryNavLink>\r\n                )}\r\n            )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","function NotFound() {\r\n    return (\r\n        <h1>NOT FOUND PAGE!</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import { Link } from \"react-router-dom\";\r\nimport './Menu.css'\r\n\r\nfunction Menu({menus}) {\r\n    return (\r\n        <>\r\n            {menus.map ((menu, id) => {\r\n                return (\r\n                    <Link key={id} to={menu.url} className=\"menu-item\">{menu.name}</Link>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu","import './Button.css'\r\n\r\nfunction Button({children, size, color, width, handleClick, disabled}) {\r\n    return <button className={`Button ${size} ${color} ${width}`}\r\n    onClick={handleClick} disabled={disabled}>{children}</button>\r\n}\r\n\r\nexport default Button\r\n\r\nButton.defaultProps = {\r\n    size: 'medium',\r\n    color: 'tomato',\r\n    disabled: false\r\n}","import './Sidebar.css'\r\n\r\nfunction Sidebar({open, children}) {\r\n    return (\r\n        <div className={`sidebar ${open ? 'open' : ''}`}>\r\n            <div className=\"sidebar-menus\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import './App.css';\n\nimport { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom';\nimport { Home, About, Movie, NotFound } from './pages';\nimport Menu from './Menu';\nimport Button from './Button';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const pages = [\n    {url: '/', name: 'Home'},\n    {url: '/about', name: 'About'},\n    {url: '/movies', name: 'Movie'}\n  ]\n\n  const [open, setOpen] = useState(false)\n\n  const showSidebar = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <div className=\"App\">\n      <Button handleClick={showSidebar}>Menu</Button>\n      <Sidebar open={open}>\n        <Menu menus={pages}></Menu>\n      </Sidebar>\n      <Routes>\n        <Route exact path=\"/\" element={<Home/>}/>\n        <Route exact path=\"/about\" element={<About/>}/>\n        <Route path=\"/movies\" element={<Movie/>}>\n          <Route path=\":movieId\" element={<Movie/>}/>\n        </Route>\n        <Route exact path=\"*\" element={<NotFound/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;","import { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nfunction Browser() {\r\n    return (\r\n        <BrowserRouter>\r\n            <App></App>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Browser","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Browser from './Browser';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Browser />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}